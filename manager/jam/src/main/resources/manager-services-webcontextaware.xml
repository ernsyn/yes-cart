<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009 Denys Pavlov, Igor Azarnyi
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <bean id="asyncExecutor" class="org.yes.cart.service.cluster.impl.AsyncExecutorImpl">
        <constructor-arg>
            <bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
                <property name="corePoolSize" value="1"/>
                <property name="maxPoolSize" value="10"/>
                <property name="threadNamePrefix" value="[admin-sync]-"/>
            </bean>
        </constructor-arg>
    </bean>

    <bean id="localModuleDirector" class="org.yes.cart.cluster.service.impl.LocalModuleDirectorImpl">
        <property name="config" value="classpath:yc-config.properties"/>
    </bean>

    <bean id="clusterService" class="org.yes.cart.service.cluster.impl.ClusterServiceImpl">
        <constructor-arg index="0" ref="nodeService"/>
        <constructor-arg index="1" ref="localClusterUtilsService"/>
        <constructor-arg index="2" ref="localQueryDirector"/>
        <constructor-arg index="3" ref="localCacheDirector"/>
        <constructor-arg index="4" ref="cacheEvictionQueue"/>
        <constructor-arg index="5" ref="localAlertDirector"/>
        <constructor-arg index="6" ref="localModuleDirector"/>
    </bean>

    <bean id="productIndexExecutor" class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">
        <description>
            Thread pool (1,1) for product indexing. Indexing is a heavy process which needs access to shared
            resources (i.e. FT index) and therefore there should never be more than one indexing process running at
            any point in time
        </description>
        <property name="corePoolSize" value="1"/>
        <property name="maxPoolSize" value="1"/>
        <property name="threadNamePrefix" value="[admin-product-index]-"/>
    </bean>

    <bean id="reindexService" class="org.yes.cart.service.cluster.impl.ReindexServiceImpl">
        <constructor-arg index="0" ref="productIndexExecutor"/>
        <constructor-arg index="1" ref="clusterService"/>
        <constructor-arg index="2" ref="nodeService"/>
    </bean>

    <bean id="productAsyncSupport" class="org.yes.cart.service.cluster.impl.ProductAsyncSupportImpl">
        <constructor-arg index="0" ref="clusterService"/>
        <constructor-arg index="1" ref="webAppManagerAsyncContextFactory"/>
        <constructor-arg index="2" ref="nodeService"/>
        <constructor-arg index="3" ref="asyncExecutor"/>
    </bean>

    <!-- ############################# Cluster specific widgets ######################### -->

    <bean id="voDashboardWidgetPluginCacheMonitoring" class="org.yes.cart.service.vo.impl.VoDashboardWidgetPluginCacheMonitoring">
        <constructor-arg index="0" ref="attributeService"/>
        <constructor-arg index="1" value="CacheOverview"/>
        <property name="roles">
            <list>
                <value>ROLE_SMADMIN</value>
                <value>ROLE_SMSHOPADMIN</value>
            </list>
        </property>
        <property name="dashboardWidgetService" ref="voDashboardWidgetService"/>
        <property name="clusterService" ref="clusterService"/>
        <property name="asyncContextFactory" ref="webAppManagerAsyncContextFactory"/>
    </bean>

    <bean id="voDashboardWidgetPluginReindex" class="org.yes.cart.service.vo.impl.VoDashboardWidgetPluginReindex">
        <constructor-arg index="0" ref="attributeService"/>
        <constructor-arg index="1" value="ReindexOverview"/>
        <property name="roles">
            <list>
                <value>ROLE_SMADMIN</value>
                <value>ROLE_SMSHOPADMIN</value>
            </list>
        </property>
        <property name="dashboardWidgetService" ref="voDashboardWidgetService"/>
        <property name="clusterService" ref="clusterService"/>
        <property name="asyncContextFactory" ref="webAppManagerAsyncContextFactory"/>
        <property name="productService" ref="productService"/>
        <property name="skuWarehouseService" ref="skuWarehouseService"/>
    </bean>

    <bean class="org.yes.cart.service.vo.impl.VoDashboardWidgetPluginAlerts">
        <constructor-arg index="0" ref="shopService"/>
        <constructor-arg index="1" ref="mailService"/>
        <constructor-arg index="2" ref="attributeService"/>
        <constructor-arg index="3" value="Alerts"/>
        <property name="roles">
            <list>
                <value>ROLE_SMADMIN</value>
                <value>ROLE_SMSHOPADMIN</value>
                <value>ROLE_SMSHOPUSER</value>
                <value>ROLE_SMSUBSHOPUSER</value>
            </list>
        </property>
        <property name="dashboardWidgetService" ref="voDashboardWidgetService"/>
        <property name="clusterService" ref="clusterService"/>
        <property name="asyncContextFactory" ref="webAppManagerAsyncContextFactory"/>
    </bean>

    <!-- ################################ Register module  ####################################################### -->

    <bean class="org.yes.cart.env.impl.ModuleImpl">
        <property name="functionalArea" value="app"/>
        <property name="name" value="jam"/>
        <property name="subName" value="manager-services-webcontextaware"/>
    </bean>

</beans>
