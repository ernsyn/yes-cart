<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009 Denys Pavlov, Igor Azarnyi
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">

    <import resource="classpath:dao-persistence-resources.xml"/>
    <import resource="classpath:payment-persistence-resources.xml"/>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <!-- add if using 2nd lvl cache: depends-on="hibernateCacheManagerProvider" -->
        <!--
            YC-315 investigation showed that we should not use 2nd level cache as it created adverse
            effect on performance by splitting selects into N + 1 selects in order to manage cache
            for joined objects.
            It seems like we never use objects by PK and hence YC does not benefit from 2nd level cache
         -->
        <!--<property name="configLocation" value="classpath:hibernate.cfg.xml"/>-->
        <property name="dataSource" ref="dataSource"/>
        <property name="mappingLocations" value="classpath*:hibernate/yc.xml"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.cache.use_second_level_cache">false</prop>
                <prop key="hibernate.dialect">${db.config.yes.hibernate.dialect}</prop>
                <prop key="show_sql">false</prop>
            </props>
        </property>
        <property name="entityInterceptor">
            <bean class="org.yes.cart.domain.interceptor.AuditInterceptor">
                <property name="prohibitedFields" ref="ycProhibitedFields"/>
            </bean>
        </property>
    </bean>


    <bean id="paySessionFactory" class="org.springframework.orm.hibernate5.LocalSessionFactoryBean">
        <property name="dataSource" ref="payDataSource"/>
        <property name="mappingLocations" value="classpath*:hibernate/ycp.xml"/>
        <property name="hibernateProperties">
            <props>
                <prop key="hibernate.show_sql">false</prop>
                <prop key="hibernate.dialect">${db.config.yespay.hibernate.dialect}</prop>
            </props>
        </property>
        <property name="entityInterceptor">
            <bean class="org.yes.cart.payment.interceptor.AuditInterceptor">
                <property name="prohibitedFields" ref="ycpProhibitedFields"/>
            </bean>
        </property>
    </bean>

    <!-- ################################ Register module  ####################################################### -->

    <bean class="org.yes.cart.env.impl.ModuleImpl">
        <property name="functionalArea" value="app"/>
        <property name="name" value="store-wicket"/>
        <property name="subName" value="websupport-persistence"/>
    </bean>

</beans>