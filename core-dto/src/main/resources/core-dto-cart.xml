<?xml version="1.0" encoding="UTF-8"?>

<!--
  ~ Copyright 2009 Denys Pavlov, Igor Azarnyi
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd">


    <bean id="cartRepository" class="org.yes.cart.shoppingcart.support.tokendriven.impl.ResilientCartRepositoryImpl">
        <constructor-arg index="0" ref="shoppingCartStateService"/>
        <constructor-arg index="1" ref="shopService"/>
        <constructor-arg index="2">
            <bean parent="txProxyTemplate">
                <property name="target">
                    <bean class="org.yes.cart.shoppingcart.support.tokendriven.impl.CartUpdateProcessorImpl">
                        <constructor-arg index="0" ref="shoppingCartStateService"/>
                        <constructor-arg index="1" ref="addressService"/>
                        <constructor-arg index="2" ref="shoppingCartCommandFactory"/>
                        <constructor-arg index="3">
                            <!--
                                 Cart state serialiser allows to persists the cart state as bytes.
                                 See documenttation and tests for all implementation for guidance.
                                 Jackson JSON serialiser seems to be ~30% faster. If any problems will
                                 appear we can always switch back to Java SDK serialisation, just swap
                                 the commented out bean.
                            -->
                            <bean class="org.yes.cart.shoppingcart.support.tokendriven.impl.ShoppingCartStateSerializerJacksonImpl"/>
                            <!--<bean class="org.yes.cart.web.support.shoppingcart.tokendriven.impl.ShoppingCartStateSerializerSdkImpl"/>-->
                        </constructor-arg>
                    </bean>
                </property>
            </bean>
        </constructor-arg>
        <constructor-arg index="3" value="21600"/>
        <constructor-arg index="4" ref="cacheManager"/>
        <!--<constructor-arg index="5">-->
            <!--<bean class="org.springframework.scheduling.concurrent.ThreadPoolTaskExecutor">-->
                <!--<description>-->
                    <!--Thread pool (1) for cart persistence so that we do not slow down the response.-->
                    <!--We only need one thread for this as we only anticipate one thread to be-->
                    <!--performing the updates to cart states.-->
                <!--</description>-->
                <!--<property name="corePoolSize" value="1"/>-->
                <!--<property name="maxPoolSize" value="1"/>-->
                <!--<property name="threadNamePrefix" value="[dto-cartupdate]-"/>-->
        <!--</bean>-->
        <!--</constructor-arg>-->
    </bean>


    <bean id="persistenceTuplizer" class="org.yes.cart.shoppingcart.support.tokendriven.impl.PersistenceTokenTuplizerImpl"
          scope="prototype">
        <constructor-arg index="0" value="cartRepository"/>
        <constructor-arg index="1" value="864000"/>
    </bean>

    <bean id="persistenceTuplizerPool" class="org.springframework.aop.target.CommonsPoolTargetSource">
        <property name="targetBeanName" value="persistenceTuplizer"/>
        <property name="maxIdle" value="10"/>
        <property name="minIdle" value="5"/>
    </bean>

    <bean id="persistenceShoppingCartPersister" class="org.yes.cart.shoppingcart.support.impl.BasicShoppingCartPersisterImpl">
        <constructor-arg index="0" ref="persistenceTuplizerPool"/>
    </bean>

    <!-- Decorators for default tuplizers and persisters -->
    <bean id="tuplizerPool" class="org.yes.cart.shoppingcart.support.impl.TuplizerPoolDecoratorImpl">
        <constructor-arg index="0" ref="persistenceTuplizerPool"/>
    </bean>

    <bean id="shoppingCartPersister" class="org.yes.cart.shoppingcart.support.impl.ShoppingCartPersisterDecoratorImpl">
        <constructor-arg index="0" ref="persistenceShoppingCartPersister"/>
    </bean>

    <bean id="commandConfig" class="org.yes.cart.shoppingcart.support.impl.CommandConfigImpl">
        <property name="cmdKeys">
            <list>
                <value>addToCartCmd</value>
                <value>addToWishListCmd</value>
                <value>addCouponCmd</value>
                <value>changeCurrencyCmd</value>
                <value>changeLocaleCmd</value>
                <value>cleanCartCmd</value>
                <value>expireCartCmd</value>
                <value>loginCmd</value>
                <value>logoutCmd</value>
                <value>loginOnBehalfCmd</value>
                <value>logoutOnBehalfCmd</value>
                <value>removeCouponCmd</value>
                <value>removeFromWishListCmd</value>
                <value>removeAllSkuCmd</value>
                <value>removeOneSkuCmd</value>
                <value>setBillingAddressSeparateCmd</value>
                <value>splitCartItemsCmd</value>
                <value>setCarrierSlaCmd</value>
                <value>setAddressesCmd</value>
                <value>setMultipleDeliveryCmd</value>
                <value>setShopIdCmd</value>
                <value>restoreCmd</value>
                <value>setTaxOptionsCmd</value>
                <value>setQuantityToCartCmd</value>
                <value>setPriceCmd</value>
                <value>recalculatePriceCmd</value>
                <value>qty</value>
                <value>supplier</value>
                <value>type</value>
                <value>wlv</value>
                <value>sku</value>
                <value>wla</value>
                <value>cip</value>
                <value>aup</value>
                <value>txn</value>
                <value>txa</value>
                <value>viewSkuInternalCmd</value>
                <value>setIpInternalCmd</value>
                <value>setPgLabelCmd</value>
                <value>setOrderMsgCmd</value>
                <value>setOrderDetailsCmd</value>
                <value>resetPasswordCmd</value>
                <value>deleteAccountCmd</value>
            </list>
        </property>
        <property name="cmdInternalKeys">
            <list>
                <value>cleanCartCmd</value>
                <value>expireCartCmd</value>
                <value>loginCmd</value>
                <value>loginOnBehalfCmd</value>
                <value>setBillingAddressSeparateCmd</value>
                <value>splitCartItemsCmd</value>
                <value>setCarrierSlaCmd</value>
                <value>setAddressesCmd</value>
                <value>setMultipleDeliveryCmd</value>
                <value>setShopIdCmd</value>
                <value>restoreCmd</value>
                <value>viewSkuInternalCmd</value>
                <value>setIpInternalCmd</value>
                <value>setPgLabelCmd</value>
                <value>setPriceCmd</value>
                <value>recalculatePriceCmd</value>
                <value>setOrderDetailsCmd</value>
            </list>
        </property>
    </bean>

    <!-- ################################ Register module  ####################################################### -->

    <bean class="org.yes.cart.env.impl.ModuleImpl">
        <property name="functionalArea" value="core"/>
        <property name="name" value="core-dto"/>
        <property name="subName" value="core-dto-cart"/>
    </bean>

</beans>
        
