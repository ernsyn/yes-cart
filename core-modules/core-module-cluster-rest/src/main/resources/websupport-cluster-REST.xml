<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2009 Denys Pavlov, Igor Azarnyi
  ~
  ~    Licensed under the Apache License, Version 2.0 (the "License");
  ~    you may not use this file except in compliance with the License.
  ~    You may obtain a copy of the License at
  ~
  ~        http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~    Unless required by applicable law or agreed to in writing, software
  ~    distributed under the License is distributed on an "AS IS" BASIS,
  ~    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  ~    See the License for the specific language governing permissions and
  ~    limitations under the License.
  -->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jaxws="http://cxf.apache.org/jaxws"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans.xsd
                           http://cxf.apache.org/jaxws
                           http://cxf.apache.org/schemas/jaxws.xsd">

    <!-- ################################ Clustering begin ###################################### -->

    <bean id="nodeService" class="org.yes.cart.cluster.node.impl.WebsupportRestNodeServiceImpl">
        <constructor-arg index="0" ref="systemService"/>
        <property name="restConfiguration" value="classpath:yc-ws-cluster.xml"/>
        <property name="restConfigurationLoader">
            <bean class="org.yes.cart.cluster.node.impl.NodeConfigurationXStreamProvider"/>
        </property>
    </bean>

    <!-- Standalone definition of authentication manager that is not linked to Spring security -->
    <bean id="serviceConnectorAuthenticationManager" class="org.springframework.security.authentication.ProviderManager">
        <constructor-arg index="0">
            <bean class="org.springframework.security.authentication.dao.DaoAuthenticationProvider">
                <!--<property name="passwordEncoder" ref="passwordHashHelper"/> Encoding is done on the client end to prevent plain text passwords -->
                <property name="userDetailsService" ref="managerUserDetailsService"/>
            </bean>
        </constructor-arg>
    </bean>


    <!-- ################################ Clustering end ######################################## -->

    <!-- ################################ Register module  ####################################################### -->

    <bean class="org.yes.cart.env.impl.ModuleImpl">
        <property name="functionalArea" value="cluster"/>
        <property name="name" value="core-module-cluster-rest"/>
        <property name="subName" value="websupport-cluster-REST"/>
    </bean>

</beans>